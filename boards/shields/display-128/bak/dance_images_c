/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
 #include <lvgl.h>


#ifndef LV_ATTRIBUTE_MEM_ALIGN
#define LV_ATTRIBUTE_MEM_ALIGN
#endif

#ifndef LV_ATTRIBUTE_IMG_DANCE01
#define LV_ATTRIBUTE_IMG_DANCE01
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE01 uint8_t dance01_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0c, 0x07, 0xe0, 0x00, 
  0x00, 0x00, 0x1e, 0x0f, 0xe0, 0x00, 
  0x00, 0x00, 0x1f, 0x07, 0x40, 0x00, 
  0x00, 0x00, 0x3f, 0x83, 0x80, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0x8c, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 
  0x0d, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xde, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xc0, 0x00, 
  0x00, 0x03, 0xff, 0xcb, 0xc0, 0x00, 
  0x00, 0x00, 0x1f, 0x81, 0xc0, 0x00, 
  0x00, 0x00, 0x1f, 0x81, 0x80, 0x00, 
  0x00, 0x00, 0x0f, 0x81, 0xc0, 0x00, 
  0x00, 0x00, 0x07, 0x81, 0xc0, 0x00, 
  0x00, 0x00, 0x07, 0x01, 0xc0, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance01_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance01_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE02
#define LV_ATTRIBUTE_IMG_DANCE02
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE02 uint8_t dance02_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 
  0x00, 0x00, 0x0c, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x0c, 0x00, 0x00, 
  0x01, 0xf8, 0x1f, 0x87, 0x00, 0x00, 
  0x03, 0xff, 0xff, 0x87, 0x80, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xbe, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x10, 0xff, 0xff, 0xfe, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xde, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xc8, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x7f, 0x81, 0x80, 0x00, 
  0x00, 0x00, 0x3f, 0x83, 0x80, 0x00, 
  0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x0e, 0x02, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance02_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance02_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE03
#define LV_ATTRIBUTE_IMG_DANCE03
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE03 uint8_t dance03_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x06, 0x00, 0x00, 0x0e, 0x00, 0x00, 
  0x03, 0x80, 0x00, 0x08, 0x00, 0x00, 
  0x01, 0xc0, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x70, 0x0c, 0x18, 0x00, 0x00, 
  0x00, 0x30, 0x1e, 0x0c, 0x00, 0x00, 
  0x00, 0x38, 0x1f, 0x07, 0x00, 0x00, 
  0x00, 0x1f, 0xff, 0x87, 0x00, 0x00, 
  0x00, 0x0f, 0xff, 0xff, 0x9e, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xfe, 0x00, 
  0x37, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xcc, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x7f, 0x83, 0x80, 0x00, 
  0x00, 0x00, 0x3f, 0x03, 0x80, 0x00, 
  0x00, 0x00, 0x1e, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance03_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance03_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE04
#define LV_ATTRIBUTE_IMG_DANCE04
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE04 uint8_t dance04_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 
  0x40, 0x00, 0x0f, 0x87, 0x00, 0x00, 
  0x3c, 0x00, 0x4f, 0xc3, 0x80, 0x00, 
  0x1f, 0xff, 0xff, 0xe1, 0xc0, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xc6, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xdf, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xff, 0x80, 
  0x63, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0xe7, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x00, 0x1f, 0xdf, 0xe0, 0x00, 
  0x00, 0x00, 0x1f, 0x80, 0xc0, 0x00, 
  0x00, 0x00, 0x0f, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x0e, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance04_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance04_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE05
#define LV_ATTRIBUTE_IMG_DANCE05
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE05 uint8_t dance05_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 
  0x00, 0x00, 0x01, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 
  0x40, 0x00, 0x07, 0x87, 0x00, 0x00, 
  0x7f, 0x80, 0x0f, 0x83, 0x00, 0x00, 
  0x3f, 0xfd, 0xff, 0xc3, 0x80, 0x00, 
  0x03, 0xff, 0xff, 0xe1, 0x80, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xc6, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xdf, 0x00, 
  0x3f, 0xf0, 0x3f, 0xff, 0xff, 0x80, 
  0x27, 0xff, 0xff, 0xff, 0xff, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xef, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 
  0x00, 0x00, 0x1f, 0x8f, 0xc0, 0x00, 
  0x00, 0x00, 0x1f, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x1e, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x0c, 0x01, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance05_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance05_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE06
#define LV_ATTRIBUTE_IMG_DANCE06
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE06 uint8_t dance06_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x03, 0x00, 0x00, 0x00, 0xe0, 0x00, 
  0x01, 0x80, 0x00, 0x03, 0x80, 0x00, 
  0x00, 0xe0, 0x06, 0x0e, 0x00, 0x00, 
  0x00, 0x78, 0x07, 0x1c, 0x00, 0x00, 
  0x00, 0x3c, 0x0f, 0x8c, 0x00, 0x00, 
  0x00, 0x1c, 0x1f, 0x86, 0x00, 0x00, 
  0x00, 0x0f, 0xff, 0xc7, 0x00, 0x00, 
  0x00, 0x0f, 0xff, 0xdf, 0x80, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0x8e, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0x3f, 0xff, 0xfe, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x3f, 0xff, 0xff, 0xff, 0xcc, 0x00, 
  0x00, 0x81, 0xff, 0xff, 0xc0, 0x00, 
  0x00, 0x00, 0x3f, 0x81, 0x80, 0x00, 
  0x00, 0x00, 0x3f, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x3f, 0x03, 0x80, 0x00, 
  0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x18, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance06_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance06_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE07
#define LV_ATTRIBUTE_IMG_DANCE07
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE07 uint8_t dance07_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 
  0x00, 0x00, 0x0c, 0x0f, 0x80, 0x00, 
  0x00, 0x00, 0x1f, 0x0f, 0xc0, 0x00, 
  0x00, 0x00, 0x1f, 0x87, 0x00, 0x00, 
  0x0c, 0xff, 0xff, 0xc7, 0x00, 0x00, 
  0x27, 0xff, 0xff, 0xff, 0x9c, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0xcf, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0xdc, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x3f, 0x81, 0x80, 0x00, 
  0x00, 0x00, 0x3f, 0x81, 0x80, 0x00, 
  0x00, 0x00, 0x1f, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance07_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance07_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE08
#define LV_ATTRIBUTE_IMG_DANCE08
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE08 uint8_t dance08_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x0f, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x87, 0xe0, 0x00, 
  0x00, 0x00, 0x3f, 0x87, 0xf8, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0x80, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0x9e, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 
  0x7f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x03, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x0f, 0xff, 0xff, 0xcc, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0x00, 0x1f, 0x81, 0x80, 0x00, 
  0x00, 0x00, 0x1f, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x0e, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x0c, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x04, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance08_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance08_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE09
#define LV_ATTRIBUTE_IMG_DANCE09
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE09 uint8_t dance09_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x30, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xbf, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xcf, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xcf, 0x00, 0x00, 
  0x00, 0x6f, 0xff, 0xff, 0x8c, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x0e, 0x00, 0x7f, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xfe, 0x00, 
  0x00, 0x0f, 0xff, 0xff, 0x8c, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0x78, 0x3f, 0x83, 0x80, 0x00, 
  0x1f, 0xe0, 0x1f, 0x03, 0x00, 0x00, 
  0x06, 0x00, 0x1e, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x0c, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance09_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance09_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE10
#define LV_ATTRIBUTE_IMG_DANCE10
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE10 uint8_t dance10_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x0c, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x1e, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0x8e, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0xcf, 0x00, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xbc, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x07, 0xf8, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xbc, 0x00, 
  0x00, 0x0f, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x1f, 0xff, 0x8f, 0x00, 0x00, 
  0x00, 0x18, 0x3f, 0x8e, 0x00, 0x00, 
  0x00, 0x18, 0x1e, 0x1c, 0x00, 0x00, 
  0x00, 0x30, 0x18, 0x38, 0x00, 0x00, 
  0x00, 0x60, 0x00, 0x30, 0x00, 0x00, 
  0x01, 0xc0, 0x00, 0x30, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance10_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance10_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE11
#define LV_ATTRIBUTE_IMG_DANCE11
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE11 uint8_t dance11_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 
  0x00, 0x00, 0x08, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0x83, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xc3, 0x80, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0x80, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xbc, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xfe, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0x98, 0x00, 
  0x07, 0xf8, 0x7f, 0x87, 0x80, 0x00, 
  0x04, 0x00, 0x3f, 0x86, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0x0e, 0x40, 0x00, 
  0x00, 0x00, 0x1e, 0x1f, 0xc0, 0x00, 
  0x00, 0x00, 0x08, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance11_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance11_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE12
#define LV_ATTRIBUTE_IMG_DANCE12
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE12 uint8_t dance12_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x07, 0x90, 0x00, 
  0x00, 0x00, 0x0c, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x06, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0x83, 0x00, 0x00, 
  0x00, 0x00, 0x3f, 0xcb, 0x00, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0x7f, 0xff, 0xfe, 0x00, 
  0x00, 0x00, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0x80, 0x00, 
  0x03, 0xff, 0xff, 0xc7, 0x00, 0x00, 
  0x07, 0xf0, 0x3f, 0x8e, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0x9f, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0x37, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance12_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance12_map,
};


#ifndef LV_ATTRIBUTE_IMG_DANCE13
#define LV_ATTRIBUTE_IMG_DANCE13
#endif

const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_DANCE13 uint8_t dance13_map[] = {
  0xff, 0xff, 0xff, 0xff, 	/*Color of index 0*/
  0x00, 0x00, 0x00, 0xff, 	/*Color of index 1*/

  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x00, 0x00, 0x1c, 0x30, 0x00, 0x00, 
  0x00, 0x00, 0x3e, 0x38, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0x0e, 0x00, 0x00, 
  0x00, 0x00, 0x7f, 0x8f, 0x00, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0x18, 0x00, 
  0x08, 0xff, 0xff, 0xff, 0x78, 0x00, 
  0x0f, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x07, 0xff, 0xff, 0x38, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x1c, 0x7f, 0x9e, 0x00, 0x00, 
  0x00, 0x38, 0x7f, 0x3c, 0x00, 0x00, 
  0x00, 0x30, 0x3f, 0x60, 0x00, 0x00, 
  0x00, 0x70, 0x1f, 0xc0, 0x00, 0x00, 
  0x00, 0xe0, 0x02, 0xc0, 0x00, 0x00, 
  0x00, 0x80, 0x00, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const lv_img_dsc_t dance13_icon = {
  .header.cf = LV_IMG_CF_INDEXED_1BIT,
  .header.always_zero = 0,
  .header.reserved = 0,
  .header.w = 43,
  .header.h = 30,
  .data_size = 188,
  .data = dance13_map,
};
